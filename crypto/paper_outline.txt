WEP operation, services and security vulnerabilities;
the goals of the IEEE 802.11i effort;
the role and operation of new and adapted protocols including Wi-Fi Protected Access (WPA), Temporal Key Integrity Protocol (TKIP), and the IEEE 802.1x authentication protocol;
WPA2 and Extensible Authentication Protocol (EAP)
how these protocols address wireless vulnerabilities and secure WLANs.

#h2:role
#h2:operation
#h2:security services
#h2:security vulnerabilities
#
history
EAP
802.1X uses EAP
802.11->WEP
2002-10-31
802.11i (partial)->WPA+TKIP
802.11i (complete)->WPA2+RSN,uses 802.1X and therefore also EAP
WEP  implements 802.11
WPA  implements partial 801.11i, in particular TKIP
WPA  implements         801.11i
{
  h1:Intro{
  }
  h1:WEP{
    h2:role{
      Wired Equivalent Privacy (WEP) is a deprecated protocol intended to secure wireless networks.
      However, it is no longer recommended for use as its security mechanism is easily bypassed.
    }
    h2:operation{
      WEP has two modes of operation: Open System authentication and Shared Key authentication.
      {
        Open System authentication is ... TODO
        associate without credentials
        traffic (data frames) is encrypted, client has to have key then
      }
      {
        Shared Key authentication is ... TODO
        4-step handshake:
        client-[authreq]->AP
        AP-[clear-text challenge]->client
        client-[E(K,text)]->AP
        AP[D(E(K,text))==text]-[accept]->client
        if decrypted text matches original text then all is good
      }
    }
    h2:security services{
      authentication, confientiality, integrity [http://webcache.googleusercontent.com/search?q=cache:IdmQq0MnkZUJ:cs.sjsu.edu/faculty/stamp/CS158B/syllabus/papers/WEPandWPA.doc]
    }
    h2:security vulnerabilities{
      chop chop
      vuln: open system more secure since keystream can be captured during the handshake [ note: show how][http://www.isaac.cs.berkeley.edu/isaac/mobicom.pdf]
      TODO

    }
  }
  h1:802.11i{
    h2:goals{
      TODO: what is the 'WIFI Alliance"
      The goal of 802.11i is to provide security mechanisms for wireless networks.
      The 802.11i standard spawned a few different standards at various stages of development.
      The first is WPA, [TODO: insert date] which implements TKIP and was introduced as a replacement for WEP.
      The final form of 802.11i is referred to as WPA2 as well as Robust Security Network (RSN).
    }
    h2:role{
    }
    h2:operation{
    }
    h2:security services{
    }
    h2:security vulnerabilities{
    }
  }
  h1:WPA{
    h2:role{
      WPA was an intermediate measure based on an intermediary version of the 802.11i standard and is intended to address security vulnerabilities in WEP.
    }
    h2:operation{

    }
    h2:security services{
    }
    h2:security vulnerabilities{
    }
  }
  h1:TKIP{
    h2:role{
      Temporaral Key Integrity Protocol is a deprecated protocol intended as a stopgap measure intended to replace WEP on existing hardware.
    }
    h2:operation{
      implementation summary
      three features to address WEP vulns
      ONE: key mixing: RC4(KMF(root key+IV) )
      instead of WEP's RC4(concat IV||root key)
      key mixing function/temporal key hash
      http://link.springer.com/article/10.1007/s12204-009-0081-8#page-2 
      TWO: sequence counter avoids replay attack
      THREE: Michael MIC (msg integ check) 64-bit
      backwards compat by using RC4
    }
    h2:security services{
      {TKIP provides two services:
        •	 Message integrity: TKIP adds a message integrity code (MIC) to the 802.11
        MAC frame after the data field. The MIC is generated by an algorithm, called
        Michael, that computes a 64-bit value using as input the source and destina-
        tion MAC address values and the Data field, plus key material.
        •	 Data confidentiality: Data confidentiality is provided by encrypting the
        MPDU plus MIC value using RC4.
      }[book:p584]
    }
    h2:security vulnerabilities{
      MIC key recovery attach
      royal holloway
    }
    links{
      https://en.wikipedia.org/wiki/Temporal_Key_Integrity_Protocol
    }
  }
  h1:EAP{
    h2:role{
      The Extensible Authentication Protocol (EAP) provides a flexible framework for network access and authentication that allows almost any authentication protocols to be used.
      Within the context of the 802.11i standard, the 802.1X protocol uses EAP to define the EAPOL authentication mechanism.
    }
    h2:operation{
      EAP is a generic transport service that defines message formats which any protocol can encapsulate in order to be EAP compatible.
      The most typical network configuration in which EAP is used is between an EAP Peer (e.g. computer joining the network), the EAP Authenticator (e.g. access point), and the Authentication Server (AS), a server which validates the credentials and authorises network access.
      #TODO: brief segment on RADIUS
      In some configurations, the EAP Authenticator also functions as the Authentication Server, but functionally the same roles are maintained.
      #TODO: what is EAP passthrough mode? book is unclear on this [https://tools.ietf.org/html/rfc3748#page-12]
      For an EAP exchange, the EAP_peer connects to the network using a lower-level protocol which implements an EAP-compatible protocoal for the authentication, e.g. 802.1X and EAPOl or PPP and PPP-EAP.
      During the ensuing authentication exchange, The EAP_peer and the authentication server exchange EAP messages provided by the EAP-compatible protocol chosen for that connection.
      The authenticator submits a Request to the EAP_peer for identity, to which the EAP_peer sends a Response containing its identity.
      The authenticator then submits an EAP message which contains a Type-field defining the EAP-compatible authentication protocol to be used. 
      If the EAP_peer does not support the protocol, it replies with a Response with a 'Nak' and indicates which protocol it would prefer. [https://tools.ietf.org/html/rfc3748#page-32]
      The authenticator then either accepts the reqeusted protocol or terminates the connection with a failure message.
      If the EAP_peer supports the protocol, it replies with a Response-message with an identical Type-field and the initiation is considered successful.
      
      Subsequently, the authenticator and EAP_peer exchange a number of Request-Response pairs determined by ethe chosen EAP protocol.
      Subsquently, the authentication information is exchanged by the authenticator sending a number of Requests to which the EAP_peer sends a number of Responses.
      The Requests and Responses contain information used to define and execute the chosen EAP-compatible authentication method.
      This exchange goes back and forth until the authenticator either authenticates the EAP_peer and transmits an EAP Success message or cannot authenticate and submits an EAP Failure message.
      The EAP conversation is considered complete upon transmission of the Success or Failure message. [https://tools.ietf.org/html/rfc3748#section-2.1]
      


    }
    h2:security services{
      [https://tools.ietf.org/html/rfc3748#page-42]
    }
    h2:security vulnerabilities{
    }
  }
  h1:802.1X{
    #TODO: mention that PSK bypasses most of the security features (src: that one ppt)
    # mention also how master key generates per-session keys and blah blah
    h2:role{
      The IEEE 802.1X Port-Based Network Access Control provides access control functions for LANs.
      In essence, it allows a device on a network to be authenticated without accessing data on the network.
      Within the context of the 802.11i standard, 802.1X is used for authentication and access control.
    }
    h2:operation{
      #TODO: add sub-headers
      The following entities connected to the LAN are involved in the authentication process:
      Supplicant refers to an entity, e.g. a computer, seeking to be authenticated on the LAN.
      Authenticator refers to an entity, e.g. a switch or AP, which handles the authentication procedure.
      Authentication Server (AS) determines whether a supplicant is authorised to access the LAN
      The authenticator passes the supplicant's credentials to the AS to determine whether to provide access to the LAN.
      The authenticator designates the logical entity 'port' as an abstraction referring to a phyiscal connection to the network.
      # TODO: fact-check - wikipedia and sans.org differ slightly, book is very vague
      The port is controlled by the PAE (Port Access Entity) which either sets it to the 'uncontrolled' (unauthorised), state or the 'controlled' (authorised) state. [https://www.sans.org/reading-room/whitepapers/networkdevs/wired-8021x-security-1654]
      In the uncontrolled state, only 802.1X traffic is allowed, i.e. the supplicant can only communicate with the AS (via the authenticator).
      Upon successful authentication, the port is changed to the 'controlled' state and the supplicant can access other network services (i.e. the data channel).
      EAP authentication mechanism{
        802.11X uses EAPOL (Extensible Authentication Protocol Over Lan) as the authentication protocol between the supplicant and the authenticator.
        A specific group-multicast address is reserved for the authentication procedure, which can be either initated by the supplicant when it joins the network or by the authenticator when it detects a new supplicant.
        The supplicant sends an EAPOL-Start packet to this address to announce intent to authenticate,
        upon which the authenticator replies with an EAPOL-EAP packet containing an EAP-Request Identity message.
        If the supplicant is authenticated, the authenticator sends an EAP-Key packet containing cryptographic keys to the supplicant.
        When the supplicant wishes to leave the network it submits an EAP-Logoff packet indicating intent to be disconnected.
      }
    }
    h2:security services{
    }
    h2:security vulnerabilities{
      [https://en.wikipedia.org/wiki/IEEE_802.1X#Vulnerabilities_in_802.1X-2001_and_802.1X-2004]
    }
  }
  h1:WPA2+RSN{
    h2:role{
    }
    h2:operation{
      The RSN connects various devices in a network, the station (STA) connecting to a network, e.g. a compture or mobile device,
      the access point (AP) to which the STA connects, 
      the authentication server (AS) which verifies the identity of the STA,
        and the end station to which the STA is connection, e.g. a server.
      RSN has five phases of operation: discovery, authentication, key generation and distribution, protected data transfer, and connection termination.
      The Discovery Phase{
        Discovery allows devices to discover access points (AP). The AP broadcasts messages in order to advertise their presense, which allows a device to discover the AP and associate with it, i.e. join the network.
        At this point the following security capabilities are determined for this connection: the confidentiality and data integrity protocols, the authentication mechanism, and the key management approach.
        The AP dictates the confidentiality and integrity protocols to be used by the STAs as all STAs must use the same protocols and encryption techniques in order to communicate accross the network.
        The particular protocol and key length are referred to as the cipher suite, which can be WEP, TKIP, CCMP, or a vendor-defined method.
        The authentication mechanism and key management approach are defined in the Authentication and Key Management (AKM) suite, which defines the method for the STA and AP to mutually authenticate as well the proceure for generating a root key used for generating other keys.
        The AKM suites can be IEEE 802.1X, pre-shared key (PSK) which has no explicit authentication, or vendor-defined methods.
      }
      The Authentication Phase{
        Authentication is the stage at which the device and Authentication server (AS) verify each others identity.
        Until the authentication is successful, the AP prevents unauthorised access to the network by only allowing authentication-related traffic between the device and the AS.
        801.1X{
        }
        MPDU Transfer{
        }
      }
      The Key generation and Distribution Phase{
        Key generation and distribution is the step during which the AP and STA generate and store crytpographic keys for future communication.
      }
      The Protected Data transfer Phase{
        Protected data transfer uses the previously generated keys to secure traffic between the STA and AP while the STA is communicating with the End Station.
        Protected data transfer refers to the secure connection based on the previously generated keys between the STA and AP while the STA communicates with and End Station.
      }
      The Connection Termination Phase{
        Connection termination is the process of the STA and AP ending the secure connection set up in the previous stages.
      }
    }
    h2:security services{
    }
    h2:security vulnerabilities{
    }
  }
  h1:Conclusion{
  }
}
#TODO:
s/EAP_peer/EAP peer/g
