#!/usr/bin/env python3

from Crypto.Cipher import AES
# https://www.dlitz.net/software/pycrypto/api/current/Crypto.Util.number-module.html
from Crypto.Util.number import bytes_to_long,long_to_bytes

if __name__ == "__main__":
    #key="0123456789ABCDEF"
    # 128-bit key k
    key = "00000000000000000000000000000001"
    # 128-bit hex plaintext (32 hex-chars, each hex-value is 2 bytes: 32*2bytes*8bit/byte =128bit)
    plaintext = '80007000600050004000300020001000'
    aes_obj = AES.new(key)
    # ensure key is correct length
    aes_obj.key_size=128
    cipher = aes_obj.encrypt(plaintext)
    print long_to_bytes(bytes_to_long(cipher)).encode("hex")

    #k = 0x00000000000000000000000000000001
    #p = 0x80007000600050004000300020001000
    key = '00000000000000000000000000000001'.decode("hex")
    ptext = '80007000600050004000300020001000'.decode("hex")
    aes=AES.new(key)
    ctext = aes.encrypt(ptext).encode("hex")

    print()
    exit


'''
hex:
verify: http://aes.online-domain-tools.com/link/71ce93g08Piu2e7S4/
80007000600050004000300020001000
00000000000000000000000000000001
9a7e0594961831b321efa7e06bdd4381

ascii:
80007000600050004000300020001000
00000000000000000000000000000001
34ec503408d5b1090d351ab0171227aab2b786136b335c8a1bbf5b0cc16b76a7
# testing with long_to_bytes(bytes_to_long(cipher)).encode("hex")
34ec503408d5b1090d351ab0171227aab2b786136b335c8a1bbf5b0cc16b76a7
'''
